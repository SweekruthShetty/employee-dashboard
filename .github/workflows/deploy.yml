name: Deploy Angular App to GitHub Pages

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install Dependencies
        run: |
          npm ci
          npm ls || true
      
      - name: Run Linter
        run: |
          npm run lint:fix
        continue-on-error: true
      
      - name: Run Tests with Coverage
        run: |
          npm run test:coverage
        continue-on-error: true

  build-and-deploy:
    needs: lint-and-test
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install Dependencies
        run: |
          npm ci
          npm ls || true
      
      - name: Validate Configuration
        run: |
          npx ng version
          cat package.json
          cat angular.json
      
      - name: Build Application (Verbose)
        run: |
          npm run build:verbose
      
      - name: List Build Artifacts
        run: |
          ls -la dist/employee-dashboard
          cat dist/employee-dashboard/index.html || echo "index.html not found"
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist/employee-dashboard'
          retention-days: 1
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      
      - name: Verify Deployment
        run: |
          echo "Deployment URL: ${{ steps.deployment.outputs.page_url }}"
        if: success()
      
      - name: Diagnose Deployment Failure
        if: failure()
        run: |
          echo "Deployment failed. Checking build artifacts and logs."
          ls -la ./dist/employee-dashboard
          cat ./dist/employee-dashboard/index.html || echo "index.html not found"
          echo "Checking npm logs:"
          cat ~/.npm/_logs/* || echo "No npm logs found"
